(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{394:function(t,s,a){"use strict";a.r(s);var n=a(46),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[t._v("#")]),t._v(" 模块化")]),t._v(" "),a("p",[a("strong",[t._v("什么是模块化呢？")])]),t._v(" "),a("ul",[a("li",[t._v("模块化开发的最终的目的是将程序分成一个个小的模块")]),t._v(" "),a("li",[t._v("这个模块中编写属于自己的逻辑代码，有自己的作用域，不会影响到其他的模块；")]),t._v(" "),a("li",[t._v("这个模块可以将自己希望的变量、函数、对象等导出给其它模块使用")]),t._v(" "),a("li",[t._v("也可以通过某种方式，导入另外模块的变量、函数、对象等；")])]),t._v(" "),a("p",[t._v("按照这种模块划分开发程序的过程，就是模块化开发的过程；")]),t._v(" "),a("p",[t._v("JS 的缺陷：")]),t._v(" "),a("ul",[a("li",[t._v("var 定义的变量作用域问题；")]),t._v(" "),a("li",[t._v("JS 的面向对象并不能像常规面向对象语言一样使用 class；(借鉴 Self 语言的)")]),t._v(" "),a("li",[t._v("JS 没有模块化的问题等等；")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("题外话")]),t._v(" "),a("p",[t._v("JS 被称之为是披着 C 语言外衣的 Lisp（这门语言被应用在人工智能领域），Lisp 被称为天才程序员使用的语言。《黑客与画家》")])]),t._v(" "),a("h2",{attrs:{id:"早期的-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#早期的-js"}},[t._v("#")]),t._v(" 早期的 JS")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("JS 仅仅作为一门脚本语言，做一些简单的表单验证或动画实现")])]),t._v(" "),a("li",[a("p",[t._v("随着前端和 JS 的快速发展，JS 代码变得越来越复杂了")]),t._v(" "),a("ul",[a("li",[t._v("ajax 的出现，前后端开发分离，意味着后端返回数据，我们需要通过 JS 进行前端页面的渲染")]),t._v(" "),a("li",[t._v("SPA 的出现，前端页面变得更加复杂：包括前端路由、状态管理等等一些列复杂的需求需要通过 JS 来实现")]),t._v(" "),a("li",[t._v("包括 Node 的实现，JS 编写复杂的后端程序，没有模块化是致命的硬伤。")])])]),t._v(" "),a("li",[a("p",[t._v("模块化是一个迫切的需求：")]),t._v(" "),a("ul",[a("li",[t._v("但是 JS 本身直到 ES6 才推出自己的模块化方案")]),t._v(" "),a("li",[t._v("在此之前，为了让 JS 支持模块化，涌现出了很多不同的模块化规范：AMD、CMD、CommonJS 等")])])])]),t._v(" "),a("h2",{attrs:{id:"没有模块化带来的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没有模块化带来的问题"}},[t._v("#")]),t._v(" 没有模块化带来的问题")]),t._v(" "),a("ul",[a("li",[t._v("命名冲突")])]),t._v(" "),a("p",[t._v("可以用 IIFE（立即函数调用表达式）解决,函数是有作用域的。立即执行函数，但是其它就访问不到了，所以需要在立即执行函数中 return 出来")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" module "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Moonster"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("带来了新的问题")]),t._v(" "),a("ol",[a("li",[t._v("我们必须记得每一个模块中返回对象的命名，才能在其它模块中正确的使用")]),t._v(" "),a("li",[t._v("代码写起来混乱不堪，每个文件中的代码都需要包裹在一个匿名函数中来编写")]),t._v(" "),a("li",[t._v("在没有合适的规范情况下，可能会出现任意命名甚至出现模块名称相同的情况")])])]),t._v(" "),a("li",[a("p",[t._v("虽然实现了模块化，但是实现过于简单，并且是没有规范的")]),t._v(" "),a("ol",[a("li",[t._v("制定规范约束每个人都按照这个规范去编写模块化的代码；")]),t._v(" "),a("li",[t._v("这个规范包括的核心功能："),a("strong",[t._v("模块本身可以导出暴露的属性，模块又可以导入自己需要的属性")]),t._v("；")])])])]),t._v(" "),a("p",[t._v("JS 社区涌出了很多规范，例如 AMD、CMD、CommonJS 都是代表性的一些规范。")]),t._v(" "),a("h2",{attrs:{id:"commonjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[t._v("#")]),t._v(" CommonJS")]),t._v(" "),a("p",[t._v("CommonJS 是一个规范，最初提出来是在浏览器以外的地方使用，并且当时被命名为 ServerJS,后来为了体现它的广泛性，修改为 CommonJS,平时我们会简称为 CJS。")]),t._v(" "),a("ul",[a("li",[t._v("Node 是 CommonJS 在服务器端一个具有代表性的实现；")]),t._v(" "),a("li",[t._v("Browserify 是 CommonJS 在浏览器中的一种实现")]),t._v(" "),a("li",[t._v("Webpack 打包工具具备对 CommonJS 的支持和转换；")])]),t._v(" "),a("p",[t._v("所以 Node 中对 CommonJS 进行了支持和实现，让我们在开发 node 的过程中可以方便的进行模块化开发；")]),t._v(" "),a("ul",[a("li",[t._v("在 Node 中每一个 JS 文件都是一个单独的模块；")]),t._v(" "),a("li",[t._v("在这个模块中包括 CommonJS 规范的核心变量：exports、module.exports、require")])]),t._v(" "),a("p",[t._v("模块化的核心是导出和导入，Node 对其进行了实现：")]),t._v(" "),a("ul",[a("li",[t._v("exports 和 module.exports 可以负责对模块中的内容进行导出；")]),t._v(" "),a("li",[t._v("require 函数可以帮助我们导入其他模块（自定义模块、系统模块、第三方库模块）中的内容")])]),t._v(" "),a("h3",{attrs:{id:"案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[t._v("#")]),t._v(" 案例")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bar.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Monster"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// require本质就是返回exports对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./bar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"理解对象的引用赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#理解对象的引用赋值"}},[t._v("#")]),t._v(" 理解对象的引用赋值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"why"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("首先呢，在内存分配一块空间，基础类型的话就直接保存了，但是对象是一个引用类型，会在堆内存开辟一块空间")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这块堆内存会有一个自己的内存地址，例如0x100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"why"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当我们把对象赋值给obj的,在内存中保存obj=0x100,obj保存的是内存地址,也就是我的这个引用指向这个内存地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// info = obj实际上就是把内存地址赋给了info,也就是,info = 0x100,内存地址的引用")]),t._v("\n")])])]),a("h3",{attrs:{id:"画图解析赋值的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#画图解析赋值的过程"}},[t._v("#")]),t._v(" 画图解析赋值的过程")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bar.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每个模块都有一个exports对象,它默认指向空对象,只要是个对象就会在内存里面开辟一块空间")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./bar.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 想办法拿到bar.js的那块内存空间,也就代表bar指向的是bar.js的那个内存地址")]),t._v("\n")])])]),a("p",[t._v("所以 Node 中 CommonJS 的本质就是对象的引用赋值.")]),t._v(" "),a("p",[a("strong",[t._v("它们实际上是一个浅层拷贝")])]),t._v(" "),a("p",[t._v("bar 和 exports 是同一个对象")]),t._v(" "),a("ul",[a("li",[t._v("所以 bar 对象是 exports 对象的浅拷贝(引用赋值)")]),t._v(" "),a("li",[t._v("浅拷贝的本质就是一种引用的赋值而已")])]),t._v(" "),a("h3",{attrs:{id:"exports-导出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exports-导出"}},[t._v("#")]),t._v(" exports 导出")]),t._v(" "),a("ul",[a("li",[t._v("注意 exports 是一个对象,我们可以在这个对象中添加很多个属性,添加的属性会导出")]),t._v(" "),a("li",[t._v("另外一个文件可以通过 require 导入")])]),t._v(" "),a("p",[t._v("意味着 main 中的 bar 变量等于 exports 对象")]),t._v(" "),a("p",[t._v("也就是 require 通过各种查找方式,最终找到了 exports 这个对象")]),t._v(" "),a("p",[t._v("并且将这个 exports 对象赋值给了 bar 变量")]),t._v(" "),a("p",[t._v("bar 变量就是 exports 对象了")]),t._v(" "),a("h3",{attrs:{id:"module-exports-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module-exports-是什么"}},[t._v("#")]),t._v(" module.exports 是什么?")]),t._v(" "),a("p",[t._v("module.exports 和 exportsu 有什么关系或者区别呢?")]),t._v(" "),a("p",[t._v("追根溯源,维基百科对 CommonJS 规范的解析:")]),t._v(" "),a("ul",[a("li",[t._v("CommonJS 中是没有 module.exports 的概念的")]),t._v(" "),a("li",[t._v("但是为了实现模块的导出,Node 中使用的是 Module 的类,每一个模块都是 Module 的一个实例,也就是 module;")]),t._v(" "),a("li",[t._v("所以在 Node 中真正用于导出的其实根本不是 exports,而是 module.exports;")]),t._v(" "),a("li",[t._v("因为 module 才是导出的真正实现者")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为源码中做了一件事情")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// module.exports = exports 是在顶层")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// exports = "123"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导出的就还是{}")]),t._v("\n")])])]),a("p",[t._v("为什么 exports 也可以导出呢?")]),t._v(" "),a("p",[t._v("是因为 module 对象的 exports 属性是 exports 对象的一个引用;")]),t._v(" "),a("p",[a("strong",[t._v("最终的目的都是让他们两个指向同一个对象")])]),t._v(" "),a("p",[t._v("也就是说 module.exports=exports=main 中的 bar")]),t._v(" "),a("p",[t._v("本质上,是 module.exports 在导出,实质上 module.exportsexports、和 require 指向的是同一个内存地址")]),t._v(" "),a("p",[t._v("module.exports 不在引用 exports 的时候,exports 就没有任何意义了")]),t._v(" "),a("p",[t._v("exports 的意义是 commonjs 中要求有一个 exports 作为导出(接口和实现类的区别)")]),t._v(" "),a("p",[t._v("的")]),t._v(" "),a("p",[a("strong",[t._v("理解值拷贝和引用拷贝的时候,内存的关系")])]),t._v(" "),a("h3",{attrs:{id:"require-细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#require-细节"}},[t._v("#")]),t._v(" require 细节")]),t._v(" "),a("p",[t._v("require 是一个函数,可以帮助我们引入一个文件(模块)中导入的对象.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://nodejs.org/dist/latest-v14.x/docs/api/modules.html#modules_all_together",target:"_blank",rel:"noopener noreferrer"}},[t._v("require 的查找规则"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("总结:")])]),t._v(" "),a("p",[t._v("导入的语法为 require(X)")]),t._v(" "),a("ul",[a("li",[t._v("情况一:X 是一个核心模块,比如 path、http\n"),a("ul",[a("li",[t._v("直接返回核心模块,并且停止查找")])])]),t._v(" "),a("li",[t._v("情况二:X 是以./或../或/(根目录)开头的\n"),a("ul",[a("li",[t._v("第一步将 X 当作一个文件在对应的目录下查找\n"),a("ul",[a("li",[t._v("如果有后缀名,按照后缀名的格式查找对应的文件")]),t._v(" "),a("li",[t._v("如果没有后缀名,就会按照如下顺序:\n"),a("ol",[a("li",[t._v("直接查找文件 X")]),t._v(" "),a("li",[t._v("查找 X.js 文件")]),t._v(" "),a("li",[t._v("查找 X.json 文件")]),t._v(" "),a("li",[t._v("查找 X.node 文件")])])])])]),t._v(" "),a("li",[t._v("第二步:没有找到对应的文件,将 X 作为一个目录\n"),a("ul",[a("li",[t._v("查找目录下面的 index 文件\n"),a("ol",[a("li",[t._v("查找 X/index.js 文件")]),t._v(" "),a("li",[t._v("查找 X/index.json 文件")]),t._v(" "),a("li",[t._v("查找 X/index.node 文件")])])])])]),t._v(" "),a("li",[t._v("如果没有找到,那么报错:not found")])])]),t._v(" "),a("li",[t._v("情况三:直接是一个 X(没有路径),并且 X 不是一个核心模块\n"),a("ul",[a("li",[t._v("会去当前文件所在的目录的 node_modules 去查找,没有的话就回去上一层目录的 node_modules 查找,一直找到根目录的 node_modules,如果没找到,那就会报错:not found")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("在每一个模块都有一个 module 对象,当前就是 id 就是一个"),a("code",[t._v(".")]),t._v(",如果是其它的就不是一个"),a("code",[t._v(".")]),t._v("了,loader,parent,chileren,exports,paths(paths 查找顺序)")])]),t._v(" "),a("h3",{attrs:{id:"模块的加载过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块的加载过程"}},[t._v("#")]),t._v(" 模块的加载过程")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// es module 与commonjs的区别")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加载过程是同步加载的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./bar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 阻塞了,不会浪费特别多的性能,是开发服务器的,文件都是在本地的,所以读取效率很快")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main被执行了"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但是那么放到浏览器上就比较麻烦了,因为它要先从服务器上面下载下来,所以会很明显的有阻塞")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果模块被多次加载是会被缓存的")]),t._v("\n")])])]),a("ol",[a("li",[t._v("结论一:模块在被第一次引入时,模块中的 JS 代码会被运行一次")]),t._v(" "),a("li",[t._v("结论二:模块被多次引入时,会缓存,最终只加载(运行)一次\n"),a("ul",[a("li",[t._v("为什么只会被加载运行一次呢?")]),t._v(" "),a("li",[t._v("这是因为每个模块对象 module 都有一个 loaded 属性")]),t._v(" "),a("li",[t._v("为 false 表示还没有加载,为 true 表示已经加载.")])])]),t._v(" "),a("li",[t._v("结论三:如果有循环引入,那么加载顺序是什么?\n"),a("ul",[a("li",[t._v("main=>(aaa)=>ccc=>ddd=>eee")]),t._v(" "),a("li",[t._v("main=>(bbb)=>ccc")]),t._v(" "),a("li",[t._v("bbb=>eee")]),t._v(" "),a("li",[t._v("这是一种数据结构:图结构")]),t._v(" "),a("li",[t._v("图结构在遍历的过程中,有深度优先搜索(DFS,depth first search)和广度优先搜索(BFS,breadth first search);")]),t._v(" "),a("li",[t._v("Node 采用的是深度优先算法:main->aaa->ccc->ddd->eee->bbb")])])])]),t._v(" "),a("p",[t._v("图结构(互联网也是图结构,把每个节点访问的过程叫图的遍历) 数组 链表 树结构 哈希表")]),t._v(" "),a("h3",{attrs:{id:"commonjs-的加载过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-的加载过程"}},[t._v("#")]),t._v(" CommonJS 的加载过程")]),t._v(" "),a("p",[t._v("CommonJS 模块加载 js 文件的过程是运行时加载的，并且是同步的：")]),t._v(" "),a("ul",[a("li",[t._v("运行时加载意味着是 JS 引擎在执行 js 代码的过程中加载模块；")]),t._v(" "),a("li",[t._v("同步就意味着一个文件没有加载结束之前，后面的代码都不会执行；")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"if语句继续执行"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("CommonJS 通过 module.exports 导出的是一个对象")]),t._v(" "),a("ul",[a("li",[t._v("导出的一个对象意味着可以将这个对象的引用在其他模块中赋值给其他变量；")]),t._v(" "),a("li",[t._v("但是最终他们指向的都是同一个对象，那么一个变量修改了对象的属性，所有的地方都会被修改。")])]),t._v(" "),a("h3",{attrs:{id:"node-源码解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-源码解析"}},[t._v("#")]),t._v(" Node 源码解析")]),t._v(" "),a("p",[t._v("源码在"),a("code",[t._v("lib/internal/modules/cjs")])]),t._v(" "),a("p",[t._v("是把对应的代码放到一个沙盒去执行的,类似于 IIFE,因为函数是有自己的作用域的")]),t._v(" "),a("h3",{attrs:{id:"commonjs-规范缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-规范缺点"}},[t._v("#")]),t._v(" CommonJS 规范缺点")]),t._v(" "),a("p",[t._v("CommonJS 加载模块是同步的:")]),t._v(" "),a("ul",[a("li",[t._v("同步意味着只有等到对应模块加载完毕,当前模块中的内容才能被运行;")]),t._v(" "),a("li",[t._v("这个在服务器不会有什么问题,因为服务器加载的 js 文件都是本地文件,加载速度非常快")])]),t._v(" "),a("p",[t._v("如果将它应用于浏览器呢?")]),t._v(" "),a("ul",[a("li",[t._v("浏览器加载 js 文件需要先从服务器将文件下载下来,之后再加载运行;")]),t._v(" "),a("li",[t._v("那么采用同步就意味着后续的 js 代码都无法正常运行,即使是一些简单的 DOM 操作;")])]),t._v(" "),a("p",[t._v("所以再浏览器中,我们通常不使用 CommonJS 规范")]),t._v(" "),a("ul",[a("li",[t._v("当然再 webpack 中使用 CommonJS 是另外一回事")]),t._v(" "),a("li",[t._v("因为它会将我们的代码转成浏览器可以直接执行的代码;")])]),t._v(" "),a("p",[t._v("在早期为了可以再浏览器中使用模块化,通常会采用 AMD 或 CMD;")]),t._v(" "),a("ul",[a("li",[t._v("但是目前一方面现代的浏览器已经支持 ES Modules,另一方面借助于 webpack 等工具可以对 CommonJS 或者 ES Module 代码的转换;")]),t._v(" "),a("li",[t._v("ADM 和 CMD 已经使用非常少了")])]),t._v(" "),a("p",[t._v("vite 编译速度非常快,因为压根就不编译,而是直接浏览器去加载,但是在打包的时候还是需要去转换成为浏览器能够识别的 ES5 的语法")]),t._v(" "),a("h2",{attrs:{id:"amd-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amd-规范"}},[t._v("#")]),t._v(" AMD 规范")]),t._v(" "),a("p",[t._v("AMD 是应用于浏览器的一种模块化规范:")]),t._v(" "),a("ul",[a("li",[t._v("AMD 是 Asynchronous Module Definition(异步模块)的缩写")]),t._v(" "),a("li",[t._v("它采用的是异步加载模块;")]),t._v(" "),a("li",[t._v("事实上 AMD 的规范还要早已 CommonJS,但是 CommonJS 目前仍然在被使用,而 AMD 使用的较少了")])]),t._v(" "),a("p",[t._v("规范只是定义代码的时候应该如何去编写,只有有了具体的实现才能被应用:")]),t._v(" "),a("ul",[a("li",[t._v("AMD 实现的比较常用的库是 "),a("a",{attrs:{href:"https://github.com/requirejs/requirejs",target:"_blank",rel:"noopener noreferrer"}},[t._v("require.js"),a("OutboundLink")],1),t._v(" 和 curl.js")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第一步:下载require.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载地址:https//github.com/requirejs/requirejs")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 找到其中的require.js文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第二步:定义HTML的script标签引入require.js和定义入口文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# data-main属性的作用就是在加载完src的文件后会加载执行该文件,作为入口文件")]),t._v("\n")])])]),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("./lib/require.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("data-main")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("./index.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// require做一个配置")]),t._v("\n  require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    paths"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块的映射关系,不要加后缀名")]),t._v("\n      foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入模块")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"monster"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"cmd-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmd-规范"}},[t._v("#")]),t._v(" CMD 规范")]),t._v(" "),a("p",[t._v("CMD 是应用于浏览器的一种模块化规范")]),t._v(" "),a("ul",[a("li",[t._v("CMD 是 Common Module Definition(通用模块定义)的编写;")]),t._v(" "),a("li",[t._v("它也是采用了异步加载模块,但是它将 CommonJS 的优点吸收了过来")])]),t._v(" "),a("p",[t._v("CMD 比较优秀的实现方案:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/seajs/seajs",target:"_blank",rel:"noopener noreferrer"}},[t._v("SeaJS"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第一步下载SeaJS")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载地址:https://github.com/seajs/seajs")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 找到dist文件夹下的sea.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第二步:引入sea.js和使用主入口文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# seajs是指定主入口文件的")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Monster hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("./lib/sea.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  seajs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/index.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"es-module"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es-module"}},[t._v("#")]),t._v(" ES Module")]),t._v(" "),a("p",[t._v("JS 没有模块化一直是它的痛点，所以才会产生我们前面学习的社区规范：CommonJS、AMD、CMD 等，后来 ES 推出了自己的模块化系统。")]),t._v(" "),a("p",[t._v("ES Module 和 CommonJS 的模块化有一些不同之处：")]),t._v(" "),a("ul",[a("li",[t._v("一方面它使用了 import 和 export 关键字")]),t._v(" "),a("li",[t._v("另一方面它采用编译期的静态分析，并且也加入了动态引用的方式：")])]),t._v(" "),a("p",[t._v("ES Module 模块采用 export 和 import 关键字来实现模块化：")]),t._v(" "),a("ul",[a("li",[t._v("export 负责将模块内的内容导出；")]),t._v(" "),a("li",[t._v("import 负责从其他模块导入内容；")])]),t._v(" "),a("p",[t._v("采用 ES Module 将自动采用严格模式：use strict")]),t._v(" "),a("p",[t._v("在浏览器中使用 ESM 时，它不支持 file 格式，可以起一个 live server 服务，去使用")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 导出方式有三种")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 导出方式一：在前面加入export")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 导出方式二：export {} 这个{放置我们要导出的引用列表}是大括号不是一个对象，是一个语法")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 导出方式三：export {name as fName},导出时，可以给变量起名")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 导入方式有三种")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 方式一：{}不是对象,js必须要加，脚手架帮我们做了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# import {} from './foo.js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 方式二：导出变量之后可以起别名")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# import {name as fName } from './foo.js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 方式三：* as foo,统一放到foo对象，作为它的属性")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"export-和-import-结合使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#export-和-import-结合使用"}},[t._v("#")]),t._v(" export 和 import 结合使用")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// import { name, age } from "./foo.js";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// export { name, age };")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上面两步转为下面这一步")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// export {name,age} from "./foo.js";')]),t._v("\n")])])]),a("p",[t._v("为什么要这样做呢？")]),t._v(" "),a("ul",[a("li",[t._v("在开发和封装一个功能库时，通常我们希望将暴露的所有接口放到一个文件中")]),t._v(" "),a("li",[t._v("这样方便指定统一的接口规范，也方便阅读")]),t._v(" "),a("li",[t._v("这个时候就可以使用 export 和 import 结合使用")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如utils.js里面有三个工具函数，format有两个工具函数")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们可以创建index.js文件直接export { } from '' 导出")]),t._v("\n")])])]),a("h3",{attrs:{id:"default-用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#default-用法"}},[t._v("#")]),t._v(" default 用法")]),t._v(" "),a("p",[t._v("前面学习的导出功能都是有名字的导出（name exports）")]),t._v(" "),a("ul",[a("li",[t._v("在导出 export 时指定了名字")]),t._v(" "),a("li",[t._v("导入 import 时需要知道具体的名字")])]),t._v(" "),a("p",[t._v("缺陷：必须知道名字")]),t._v(" "),a("p",[t._v("还有一种导出叫做默认导出（default export）")]),t._v(" "),a("ul",[a("li",[t._v("默认导出 export 时可以不需要指定名字。")]),t._v(" "),a("li",[t._v("在导入时不需要使用{}，并且可以自己来指定名字。")]),t._v(" "),a("li",[t._v("它也方便我们和现有的 CommonJS 等规范相互操作。")])]),t._v(" "),a("p",[t._v("注意：在一个模块中，只能有一个默认导出（default export）")]),t._v(" "),a("h3",{attrs:{id:"import-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-函数"}},[t._v("#")]),t._v(" import 函数")]),t._v(" "),a("p",[t._v("通过 import 加载一个模块，是不可以在其放到逻辑代码中的。")]),t._v(" "),a("p",[t._v("为什么会出现这个情况呢？")]),t._v(" "),a("ul",[a("li",[t._v("这是因为 ES Module 在被 JS 引擎解析时，就必须知道它的依赖关系；（parsing 只是解析没有执行的，会转成 ast,但是在解析就会语法分析出来语法错误，parsing 时就已经确定了依赖关系，cjs 的 require 是执行一个函数，它可以直接使用动态加载，但是纯 ESM 是不行的，所以解析阶段就会报出问题，所以只能使用 import()函数，import 函数是一种异步加载的，返回的是一个 promise,promise 是一个契约，承诺）")]),t._v(" "),a("li",[t._v("由于这个时候 js 代码没有任何的运行，所以无法在进行类似于 if 判断中根据代码的执行情况")])]),t._v(" "),a("p",[t._v("但是在某些情况下我们确实希望给动态的加载一个模块：")]),t._v(" "),a("ul",[a("li",[t._v("如果根据不同的条件，动态的选择加载模块的路径；")]),t._v(" "),a("li",[t._v("这个时候需要使用 import()函数来动态加载;")])]),t._v(" "),a("p",[t._v("大部分的脚手架都是基于 webpack，会对 import()单独打包到一个 js 文件，到时候就不需要加载一个特别大的 js 文件了，需要用到的时候再去加载 js 文件。")]),t._v(" "),a("h3",{attrs:{id:"es-module-加载过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es-module-加载过程"}},[t._v("#")]),t._v(" ES Module 加载过程")]),t._v(" "),a("p",[t._v("ES Module 加载 js 文件的过程是编译（解析）时加载的，并且是异步的：")]),t._v(" "),a("ul",[a("li",[t._v("编译时（解析）加载，意味着 import 不能和运行时相关的内容放在一起使用：")]),t._v(" "),a("li",[t._v("比如 from 后面的路径需要动态获取；")]),t._v(" "),a("li",[t._v("比如不能将 import 放到 if 等语句块中")]),t._v(" "),a("li",[t._v("所以有时候我们也称 ES Module 是静态解析的，而不是动态或者运行时解析的；")])]),t._v(" "),a("p",[t._v("可以在 html 中的 script 标签进行测试异步的，相当于有个 async 属性")]),t._v(" "),a("p",[t._v("异步意味着：JS 引擎在遇到 import 时会去获取这个 js 文件，但是这个获取的过程是异步的，并不会阻塞主线程继续执行；")]),t._v(" "),a("ul",[a("li",[t._v("也就是说我们设置了 type=module 的代码，相当于在 script 标签上也加上了 async 属性")]),t._v(" "),a("li",[t._v("如果我们后面有普通的 script 标签以及对应的代码，那么 ES Module 对应的 js 文件和代码不会阻塞他们的执行。")])]),t._v(" "),a("p",[t._v("ES Module 通过 export 导出的是变量本身的引用：")]),t._v(" "),a("ul",[a("li",[t._v("export 在导出一个变量时，JS 引擎会解析这个语法，并且创建模块环境记录（module environment record）;")]),t._v(" "),a("li",[t._v("模块环境记录会和变量进行绑定（bindings）,并且这个绑定是实时的；")]),t._v(" "),a("li",[t._v("而在导入的地方，我们是可以实时的获取到绑定的最新值的；")])]),t._v(" "),a("p",[t._v("所以，如果在导出的模块中修改了变化，那么导入的地方可以实时获取最新的变量；")]),t._v(" "),a("p",[t._v("注意：在导入的地方不可以修改该变量，他只是被绑定到了这个变量上（其实是一个常量）")]),t._v(" "),a("p",[t._v("思考： 如果 bar.js 导出的是一个对象，那么 main.js 中是否可以修改对象中的属性呢？")]),t._v(" "),a("ul",[a("li",[t._v("答案是可以的，因为他们指向同一块内存空间。")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" 导出的不是一个对象，导出这个值是变量的引用，可以跟CJS的exports做对比，设置一两秒后的打印,在import处修改的话，也就是反过来，就会报语法错误，如果是对象的话那就没问题，因为是对象的引用赋值\n")])])]),a("h2",{attrs:{id:"node-对-es-module-的支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-对-es-module-的支持"}},[t._v("#")]),t._v(" Node 对 ES Module 的支持")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在最新的 Current（v14.13.1）中，支持 ES Module，我们需要进行如下操作：")]),t._v(" "),a("ul",[a("li",[t._v("方式一：在 package.json 中配置 type:module")]),t._v(" "),a("li",[t._v("方式二：文件以.mjs 结尾，表示使用的是 ES Module；")])])]),t._v(" "),a("li",[a("p",[t._v("在最新的 LTS 版本（12.19.0）中，我们也是可以正常运行的，但是会报一个警告。")])])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 异步使用时，可以在顶级作用域内直接使用 await")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 没有了关键字 require，module.exports,exports,__dirname,__filename")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以使用 import.meta 获取信息")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 esm 下调用 cjs 的方法： 可以使用 cjs 后缀文件")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 翻过来不能使用这种方式在cjs下调用esm的方法")]),t._v("\n")])])]),a("h3",{attrs:{id:"commanjs-和-es-module-交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commanjs-和-es-module-交互"}},[t._v("#")]),t._v(" CommanJS 和 ES Module 交互")]),t._v(" "),a("p",[t._v("结论一：通常给情况下，CommonJS 不能加载 ES Module")]),t._v(" "),a("ul",[a("li",[t._v("因为 CommonJS 是同步加载的，但是 ES Module 必须经过静态分析等，无法在这个时候执行 JS 代码")]),t._v(" "),a("li",[t._v("但是这个并非绝对的，某些平台在实现的时候可以对代码进行针对性的解析，可能也会支持。")]),t._v(" "),a("li",[t._v("Node 当中是不支持的")])]),t._v(" "),a("p",[t._v("结论二：多数情况下，ES Module 是可以加载 CommonJS 的")]),t._v(" "),a("ul",[a("li",[t._v("ES Module 在加载 CommonJS 时，会将其 module.exports 导出的内容作为 default 导出方式来使用；")]),t._v(" "),a("li",[t._v("这个也依然需要看具体的实现，比如 webpack 中是支持的，Node 最新的 Current 版本也是支持的")]),t._v(" "),a("li",[t._v("但是在最新的 LTS 版本中就不支持；")])])])}),[],!1,null,null,null);s.default=e.exports}}]);