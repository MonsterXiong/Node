(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{383:function(t,e,r){"use strict";r.r(e);var v=r(46),n=Object(v.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"v8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v8"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://v8.dev/",target:"_blank",rel:"noopener noreferrer"}},[t._v("V8"),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[t._v("阿斯顿马丁汽车高性能发动机的一个引擎")])]),t._v(" "),r("ul",[r("li",[t._v("V8 是用 C++编写的 Google 开源高性能 JS 和 WebAssembly 引擎，它用于 Chrome 和 Node.js 等")]),t._v(" "),r("li",[t._v("它实现 ECMAScript 和 WebAssembly,并在 WIN7 或更高版本，mac OS 10.12+和使用 X64，IA-32，ARM 或 MIPS 处理器的 Linux 系统上运行。")]),t._v(" "),r("li",[t._v("V8 可以独立运行，也可以嵌入到任何 C++应用程序中。")])]),t._v(" "),r("h2",{attrs:{id:"v8-引擎的原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v8-引擎的原理"}},[t._v("#")]),t._v(" V8 引擎的原理")]),t._v(" "),r("p",[t._v("V8 引擎本身源码非常复杂，大概有超过一百万行 C++代码，简单了解一下它执行 JS 代码的原理：")]),t._v(" "),r("p",[t._v("JS 源代码=》"),r("strong",[t._v("parse")]),t._v("=>AST=>"),r("strong",[t._v("ignition")]),t._v("（=》收集信息 "),r("strong",[t._v("TurboFan")]),t._v("=>MachineCode 优化的机器码（字节码）=》运行结果）=》bytecode（TurboFan）=>运行结果")]),t._v(" "),r("h2",{attrs:{id:"内置模块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内置模块"}},[t._v("#")]),t._v(" 内置模块")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://v8.dev/blog/scanner",target:"_blank",rel:"noopener noreferrer"}},[t._v("parse"),r("OutboundLink")],1),t._v(" 模块会将 JS 代码转成 AST，这是因为解释器并不认识 JS 代码")]),t._v(" "),r("ul",[r("li",[t._v("如果函数没有被调用，那么是不会被转成 AST 的")])]),t._v(" "),r("p",[r("a",{attrs:{href:"https://v8.dev/blog/ignition-interpreter",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ignition"),r("OutboundLink")],1),t._v(" 是一个解释器，会将 AST 转换成 ByteCode(字节码)[bytecode 类似汇编代码 ，也可以执行字节码]")]),t._v(" "),r("ul",[r("li",[t._v("同时会收集 TurboFan 优化所需要的信息（比如函数参数的类型信息，有了类型才能进行真实的运算）")]),t._v(" "),r("li",[t._v("如果函数只调用一次，Ignition 会执行解释执行 ByteCode")])]),t._v(" "),r("p",[r("a",{attrs:{href:"https://v8.dev/blog/turbofan-jit",target:"_blank",rel:"noopener noreferrer"}},[t._v("TurboFan"),r("OutboundLink")],1),t._v("是一个编译器，可以将字节码编译为 CPU 可以直接执行的机器码；")]),t._v(" "),r("ul",[r("li",[t._v("如果一个函数被多次调用，那么就会被标记为热点函数，那么就会经过 TurboFan 转换成优化的机器码，提高代码的执行性能；")]),t._v(" "),r("li",[t._v("但是，机器码实际上也会被还原为 ByteCode，这是因为如果后续执行函数的过程中，类型发生了变化（比如 sum 函数原来执行的是 number 类型，后来执行变成了 string 类型），之前优化的机器码并不能正确的处理运算，就会逆向的转成字节码(Deoptimization 反向优化)=>可以理解 TS 的效率")])]),t._v(" "),r("p",[t._v("上面是 JS 代码的执行过程，事实上 V8 的内存回收也是其强大的另外一个原因:")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://v8.dev/blog/trash-talk",target:"_blank",rel:"noopener noreferrer"}},[t._v("Orinoce"),r("OutboundLink")],1),t._v("模块，负责垃圾回收，将程序中不需要的内存回收;")]),t._v(" "),r("h2",{attrs:{id:"编程语言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#编程语言"}},[t._v("#")]),t._v(" 编程语言")]),t._v(" "),r("p",[t._v("解释型语言：运行效率相对较低。")]),t._v(" "),r("p",[t._v("编译型的语言：运行效率相对较高。")]),t._v(" "),r("p",[t._v("编译型语言 C++可以直接变成机器代码，可以直接加载到内存然后交给 cpu 执行。")]),t._v(" "),r("p",[t._v("然后解释型语言 JS 就要执行一个过程，V8 做了个优化收集信息，转成优化的机器码。")]),t._v(" "),r("blockquote",[r("p",[t._v("限制语言能力的不是语言本身，而是语言的运行环境（平台）")])])])}),[],!1,null,null,null);e.default=n.exports}}]);